
```{r setup, echo = FALSE, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)

library(ape)
# General data analysis packages
library(knitr)
library(tidyverse)
library(magrittr)

# Phylogenetics packages
library(phylobase) # extend comparative analysis in ape
library(phytools) # same as ^
library(ggtree) # tree plotting that builds on ggplot

# tree distance
library('TreeDist')
```

# Robustness of Phylogenetic Tree Inference - Apoditrysia

# Introduction and Goals

This project aims to examine the sensitivity of the phylogenetic trees inferred from Apoditrysia (butterflies and larger moths) sequences. Two datasets were created. The first dataset consisted of 18S sequences from Apoditrysia, which are highly conserved and therefore useful for phylogenetic analyses. The second dataset contained full mitochondrial genomes. Both datasets were extracted from BLAST using a bait sequence and aligned using MAFFT. 

Dataset 1: \
To begin, 166 sequences were found in Apoditrysia. The outgroup taxa were chosen such that 6/8 occured in Ditrysia clade but not the Apoditrysia clade. Then the remaining two outgroup taxa were from Incurvarioidea (yucca and fairy moths), which is in Heteroneura along with Ditrysia. The goal of such outgroup sampling was to find outgroups that have varying degrees of similarity to the target clade.

In summary \
Outgroup: 6/8 in Ditrysia. \
Gelechioidea: Phthorimaea_operculella \
Obtectomera: Loryma_sp. \
Tineoidea: Ogmograptis_sp., Thyridopteryx_ephemeraeformis \
Yponomeutoidea: Tritymba_sp., Plutella_xylostella \

2/8 in sister taxa to Incurvarioidea  \
Prodoxus_quinquepunctellus, Tegeticula_yuccasella

Dataset 2: \
96 species from Apoditrysia \
5 outgroup species: Polyploca_ridens, Platyedra_subcinerea, Parnassius_tianschanicus, Plutella_armoraciae, Paraclemensia_caerulea from groups with various distances from Apoditrysia. \

The sequences were then combined, and regex was used to adjust the labels of the FASTA files.

The particular regex used was
Find: >\\S* (\\S*)\\s(\\S*).* 
Replace: >$1_$2

Then the sequences were aligned using MAFFT and analyses were performed using the McCleary Cluster.

# Methods

IQTree and RevBayes were used to generate trees. The R package TreeDist was used to quantify and visualize the difference between trees.

All input fasta files, .sh files, .rev files, and output files are included in this directory.

# Results

IQTree was first used to generate the most likely tree using bootstrapping (1000 iterations) on all extracted 18S sequences.

```{r fig.width=12, fig.height=20}

first_pass = read.tree("all_18s_aligned.fa.treefile")

```

```{r fig.width=9, fig.height=30}

plot(first_pass)
nodelabels(first_pass$node.label)

```

It may not be very obvious, but the bootstrap support of this tree is not great. Below is a histogram of the supports.

```{r}

hist(as.integer(first_pass$node.label), xlab="Bootstrap support", main="")

```

Therefore, the dataset was pruned by removing sequences that were much longer (i.e. 3-4k nucleotides longer than the majority). This was about 10 sequences and helped the alignment to have less gaps.

(Previously, most alignmemts had ~60% gaps on average).

```{r fig.width=9, fig.height=30}
pruned = read.tree("18s_pruned_aligned.fasta.treefile")
plot(pruned)
nodelabels(pruned$node.label)

```

And a histogram of the bootstrap supports for this tree:

```{r}

hist(as.integer(pruned$node.label), xlab="Bootstrap support", main="")

```

As one can see, while the support it is still not ideal, the histogram appears to be much better.

Now, to do another sanity check, one can observe the location of the outgroup taxa (in red).

```{r fig.width=9, fig.height=30}

colors = ifelse(grepl("Phthorimaea_operculella|Loryma_sp.|Ogmograptis_sp.|Thyridopteryx_ephemeraeformis|Tritymba_sp.|Plutella_xylostella|Prodoxus_quinquepunctellus|Tegeticula_yuccasella",pruned$tip.label),"red","black")

plot(pruned,tip.color=colors)
```

Most of the outgroup taxa are near each other as desired. However, they are in the middle of the phylogeny for some reason (perhaps this is because MAFFT adjusted the order). However, while this "looks" weird, it is not actually significant to the topology of the tree, so I will reorder for future analysis. 

More concerning is that _Thyridopteryx_ is clearly far removed from the remainder of its outgroup brethren. Further inverstigation reveals that it is not in Tineoidea as BLAST promised; therefore, a more closely related species to Apoditrysia might be chosen instead.

Finally, an analysis of the sequences reveals that _Epichoristodes_acerbella_ has a very sparce alignment. Thus, I will remove it as it is uninformative in its current state. This can be seen in the produced tree in which Epichoristodes stands out from the rest of the taxa.

Below is the updated tree with _Epichoristodes_acerbella_ removed. The bootstrap support is better but still not ideal, and the outgroups are generally together.

```{r fig.width=9, fig.height=30}
pruned2 = read.tree("v2_18s_pruned_aligned.fasta.treefile")
plot(pruned2)
nodelabels(pruned2$node.label)
```
```{r}
hist(as.integer(pruned2$node.label), xlab="Bootstrap support", main="")
```

```{r fig.width=9, fig.height=30}
colors = ifelse(grepl("Phthorimaea_operculella|Loryma_sp.|Ogmograptis_sp.|Thyridopteryx_ephemeraeformis|Tritymba_sp.|Plutella_xylostella|Prodoxus_quinquepunctellus|Tegeticula_yuccasella",pruned2$tip.label),"red","black")

plot(pruned2,tip.color=colors)
```

Additionally, IQTree has an outgroup function that should (theoretically) group all the outgroups together. However, the tree generated using this method not only has lower bootstrap support values but also does not group the outgroup "clade" together. Therefore, the previous model is condsidered preferable.

```{r fig.width=9, fig.height=30}
t = read.tree("outgroup_auto.fasta.treefile")
plot(t)
nodelabels(t$node.label)
```
```{r}
hist(as.integer(t$node.label), xlab="Bootstrap support", main="")
```

```{r fig.width=9, fig.height=30}
colors = ifelse(grepl("Phthorimaea_operculella|Loryma_sp.|Ogmograptis_sp.|Thyridopteryx_ephemeraeformis|Tritymba_sp.|Plutella_xylostella|Prodoxus_quinquepunctellus|Tegeticula_yuccasella",t$tip.label),"red","black")

plot(t,tip.color=colors)
```

Next, the preferred ML tree was compared to a Bayesian tree created using RevBayes (HKY).
```{r fig.width=9, fig.height=30}
t = read.nexus("bayes_HKY.nex")
```

![HKY 18S](bayes_HKY.tre.jpg){#id .class width=100% height=125%}

Note that the posterior probability of each branch is very low -- most of them are below 0.2.

Therefore, it remained clear that more data was needed in order to create a more robust tree. Espeland et al. (2018) created a phylogeny of butterflies (closely related to Apoditrysia) and provided a list of probes. Python was used to randomly sample 15% of the probes. The sampled probes were then used in nBLAST. It was observed that the CO1 gene (Cytochrome c oxidase I) was well-sampled within _Apoditrysia_; moreover, a number of species had complete mitochondria gene sequences that contained CO1. Therefore, a complete mitochondria sequence was used as a probe in nBLAST. 

The resulting IQtree model had much better results: the bootstrap supports were higher. However, the outgroups were not next to each other; this could be a result of choosing outgroups too close to the ingroup (in fact, NCBI does not consider those in Obtectomera to be within Apoditrysia but Wikipedia does.)

```{r fig.width=9, fig.height=30}
mito = read.tree("mito1_al.fasta.treefile")
plot(mito)
nodelabels(mito$node.label)
```
```{r}
hist(as.integer(mito$node.label), xlab="Bootstrap support", main="")
```

```{r fig.width=9, fig.height=30}
colors = ifelse(grepl("Polyploca_ridens|Platyedra_subcinerea|Parnassius_tianschanicus|Plutella_armoraciae|Paraclemensia_caerulea",mito$tip.label),"red","black")

plot(mito,tip.color=colors)
```

Thus another IQTree run was completed to see if the outgroups had any impact on the tree at all. Below is the no-outgroup tree which apppears very similar to the above standard auto tree for the mitochondria data.

```{r fig.width=9, fig.height=30}
x_out = read.tree("mito1_nooutgroup.fasta.treefile")
plot(x_out)
```

The TreeDist package was then used to quantify the differences between these 2 trees. In particular, the TreeDistance function shows the clustering information variation between the mitochondial trees with and without outgroups normalized by the total information content of all splits.

```{r}
out_diff = TreeDistance(mito, x_out)
print(out_diff)
```
which indicates that the trees are very similar.

Visually, the difference between the trees was as follows:
```{r fig.width=9, fig.height=30}
VisualizeMatching(MatchingSplitDistance, mito, x_out, edge.cex=FALSE)
```

In the above example, the yellow colored splits indicate a difference between both trees. This only occurs due to the removal of the outgroups, implying that the outgroups have little to no impact on the tree itself. 

So how sensitive is the is the base ML tree to ablation? 25 species were removed at random from the tree, and two ways of re-aligning the data were completed. The first was a "clipping" of previous alignments; that is, the alignment of the 75 remaining species did not change, and less sequences were used to construct the tree. The second is an actual re-alignment of all kept species.

Here is the clipped version:

```{r fig.width=9, fig.height=30}
clipped = read.tree("mito_abl_clipped.fasta.treefile")
plot(clipped)
nodelabels(clipped$node.label)
```
```{r}
hist(as.integer(clipped$node.label), xlab="Bootstrap support", main="")
```

And here is the realigned version:

```{r fig.width=9, fig.height=30}
realigned = read.tree("mito_abl.fasta.treefile")
plot(realigned)
nodelabels(realigned$node.label)
```
```{r}
hist(as.integer(realigned$node.label), xlab="Bootstrap support", main="")
```

Now we can compare the trees.
```{r}
tocomp_trees = structure(list(base = mito, clipped = clipped , realigned = realigned), class = 'multiPhylo')

print(TreeDistance(tocomp_trees, tocomp_trees))

```

Clearly, the realigned version has more differences to the base and clipped trees than the base tree  has to the clipped tree. This indicates that IQTree is very sensitive to the alignment of the data.

We can also visually compare the clipped and realigned trees using the same distance metric as the previous example (that is, recording the split differences of the two trees)

```{r fig.width=9, fig.height=30}
VisualizeMatching(MatchingSplitDistance, clipped, realigned, edge.cex=FALSE)
```

While there are similarities between the two trees, there are also some differences especially pertaining to the upper part of the tree.

It is also interesting to compare the IQTrees to those created using RevBayes. First, two trees were created using the 'base' dataset according to the HKY and GTR models. 

HKY:
```{r fig.width=9, fig.height=30}
rb_hky = read.nexus("rb_mito1_al_HKY.tre")
```

![HKY Base Model](rb_mito1_al_HKY.tre.jpg){#id .class width=100% height=110%}

Note that similar to the IQTree trees, this HKY model shows vast improvements to the posterior probabilities compared to the 18S data.

GTR:
```{r fig.width=9, fig.height=30}
rb_gtr = read.nexus("rb_mito1_al_GTR.tre")

# removing single quotes
for (i in 1:length(rb_gtr$tip.label)) {
  s <- rb_gtr$tip.label[i]
  if (substring(s, 1, 1) == "'") {
    rb_gtr$tip.label[i] <- substring(s, 2, nchar(s) - 1)
  }
}
```

![GTR Base BI Model](rb_mito1_al_GTR.tre.jpg){#id .class width=100% height=120%}

Comparing these Bayesian-generated base trees to the ML-generated IQTrees from before:

```{r}
tocomp_trees = structure(list(ML_Base = mito, RB_HKY = rb_hky , RB_GTR = rb_gtr), class = 'multiPhylo')

print(TreeDistance(tocomp_trees, tocomp_trees))

```

Note that the metric we are using here (Information-based generalized Robinson–Foulds distances) is not symmetric; the distance from ML_Base to RB_HKY is not equal to the distance from RB_HKY to ML_Base. Clearly, RF distance is symmetric, so the cause of this asymmetry is probably a difference in the information content of some splits in the trees.

However, the general pattern remains clear. The RevBayes trees are closer to each other than to the IQTree. This suggests that this particular dataset could be slightly sensitive to the phylogenetic tree-generating method.

Next, the two RevBayes base trees were visually compared to analyze where their differences occur. It is clear that most species are in similar places in both trees (for example, _Pidorus_ moved within the _Pidorus_, _Histia_, _Eterusia_, _Erasmia_, _Amesia_ clade).

```{r fig.width=9, fig.height=30}
VisualizeMatching(MatchingSplitDistance, rb_hky, rb_gtr, edge.cex=FALSE)
```

Note that _Grapholita_ is not monophyletic in the HKY tree but is monophyletic in the GTR tree. Given that the latter is probably more likely, further ablation and no-outgroup trees were built using RevBayes GTR.

Below is the no outgroup Bayesian Infererance GTR tree.

```{r fig.width=9, fig.height=30}
rb_xog = read.nexus("rb_mito1_nooutgroup_GTR.tre")
```

![GTR No Outgroup BI Model](rb_mito1_nooutgroup_GTR.tre.jpg){#id .class width=100% height=125%}

Notably, removing the outgroup lowers the posterior probabilities of many splits. However, the resulting trees are very similar (a distance of ~0.08 as seen below).

```{r}
print(TreeDistance(rb_gtr, rb_xog))

```

Then the two ablation trees (clipped and realignment) were built. 

```{r fig.width=9, fig.height=30}
rb_clip = read.nexus("rb_mito_abl_clipped_GTR.tre")
```

![GTR Clipped Ablation BI Model](rb_mito_abl_clipped_GTR.tre.jpg){#id .class width=100% height=125%}

```{r fig.width=9, fig.height=30}
rb_realign = read.nexus("rb_mito_abl_GTR.tre")
```

![GTR Realigned Ablation BI Model](rb_mito_abl_GTR.tre.jpg){#id .class width=100% height=125%}

Clearly, both have slightly reduced posterior probablilities compared to the base BI model.

```{r}
tocomp_trees = structure(list(BI_Base = rb_gtr, Clipped = rb_clip , Realigned = rb_realign), class = 'multiPhylo')

print(TreeDistance(tocomp_trees, tocomp_trees))

```

However, the clipped and realigned models are very close to one another (and both are closer to BI base GTR than either the ML clipped or ML realigned were to the base ML model). This suggests that perhaps Bayesian inference is a better fit for this data set as the model is more robust.

Finally, the clipped and realigned models are visualized to contextualize their differences. 
```{r fig.width=9, fig.height=30}
VisualizeMatching(MatchingSplitDistance, rb_clip, rb_realign, edge.cex=FALSE)
```

Again, one observes that the trees are very similar with small clade rearrangements.

# Discussion

In summary, the quality (and quantity) of the data used in any phylogenetic inference model is vital to the overall robustness of the model. More than one gene is therefore preferable to build a strong model. This was shown via the difference in quality between the 18S and mitochondria base ML trees. Further mitochondria dataset analyses showed that the Bayesian GTR tree was more robust than the ML tree to ablation, removal of outgroups, and realignment of data subsets. The largest challenge was data processing. In particular, curating a dataset that would have better bootstrap support and posterior probabilities compared to the 18S dataset proved to be a challenge. Future directions could include testing a different clade, more and/or different genes, and other phylogenetic tree inferance software such as RAxML.

# References 

Espeland M, Breinholt J, Willmott KR, Warren AD, Vila R, Toussaint EFA, Maunsell SC, Aduse-Poku K, Talavera G, Eastwood R, Jarzyna MA, Guralnick R, Lohman DJ, Pierce NE, Kawahara AY. A Comprehensive and Dated Phylogenomic Analysis of Butterflies. _Curr Biol._ 2018 Mar 5;28(5):770-778.e5. doi: 10.1016/j.cub.2018.01.061. Epub 2018 Feb 15. PMID: 29456146.